"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const o=require("jose"),v=require("uuid");var l=(r,t,e)=>new Promise((c,y)=>{var E=n=>{try{d(e.next(n))}catch(u){y(u)}},w=n=>{try{d(e.throw(n))}catch(u){y(u)}},d=n=>n.done?c(n.value):Promise.resolve(n.value).then(E,w);d((e=e.apply(r,t)).next())});const p=process.env.ENCRYPTION_SECRET_JWT,a=process.env.ENCRYPTION_SECRET_JWE;let i,s;const T=()=>l(void 0,null,function*(){if(!(i&&s)){if(!p)throw new Error("JWT encryption secret is not found in env.");if(!a)throw new Error("JWE encryption secret is not found in env.");i=yield o.importPKCS8(p,"ES256"),s=yield o.importPKCS8(a,"ECDH-ES+A128KW")}});T();const S=r=>l(void 0,null,function*(){const t=v.v4(),e=yield new o.SignJWT({}).setProtectedHeader({typ:"JWT",alg:"ES256"}).setIssuedAt().setExpirationTime("30d").setIssuer("https://mysite.com").setSubject(r).setJti(t).sign(i);return{token:yield new o.CompactEncrypt(new TextEncoder().encode(e)).setProtectedHeader({alg:"ECDH-ES+A128KW",enc:"A256CBC-HS512"}).encrypt(s),dbToken:t}}),f=r=>l(void 0,null,function*(){try{const{plaintext:t}=yield o.compactDecrypt(r,s),e=new TextDecoder().decode(t),{payload:c}=yield o.jwtVerify(e,i,{issuer:"https://mysite.com"});return c}catch{throw new Error("Token decode error")}});exports.decyptToken=f;exports.generateToken=S;
