"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const e=require("jose"),d=require("uuid"),i=process.env.ENCRYPTION_SECRET_JWT,a=process.env.ENCRYPTION_SECRET_JWE;let n,o;const w=async()=>{if(!(n&&o)){if(!i)throw new Error("JWT encryption secret is not found in env.");if(!a)throw new Error("JWE encryption secret is not found in env.");n=await e.importPKCS8(i,"ES256"),o=await e.importPKCS8(a,"ECDH-ES+A128KW")}};w();const p=async r=>{const t=d.v4(),s=await new e.SignJWT({}).setProtectedHeader({typ:"JWT",alg:"ES256"}).setIssuedAt().setExpirationTime("30d").setIssuer("https://mysite.com").setSubject(r).setJti(t).sign(n);return{token:await new e.CompactEncrypt(new TextEncoder().encode(s)).setProtectedHeader({alg:"ECDH-ES+A128KW",enc:"A256CBC-HS512"}).encrypt(o),dbToken:t}},u=async r=>{try{const{plaintext:t}=await e.compactDecrypt(r,o),s=new TextDecoder().decode(t),{payload:c}=await e.jwtVerify(s,n,{issuer:"https://mysite.com"});return c}catch{throw new Error("Token decode error")}};exports.decyptToken=u;exports.generateToken=p;
