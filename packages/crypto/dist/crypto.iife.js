var crypto=function(c,r,v){"use strict";var l=(o,t,e)=>new Promise((d,E)=>{var f=n=>{try{u(e.next(n))}catch(y){E(y)}},S=n=>{try{u(e.throw(n))}catch(y){E(y)}},u=n=>n.done?d(n.value):Promise.resolve(n.value).then(f,S);u((e=e.apply(o,t)).next())});const a=process.env.ENCRYPTION_SECRET_JWT,p=process.env.ENCRYPTION_SECRET_JWE;let i,s;(()=>l(void 0,null,function*(){if(!(i&&s)){if(!a)throw new Error("JWT encryption secret is not found in env.");if(!p)throw new Error("JWE encryption secret is not found in env.");i=yield r.importPKCS8(a,"ES256"),s=yield r.importPKCS8(p,"ECDH-ES+A128KW")}}))();const w=o=>l(void 0,null,function*(){const t=v.v4(),e=yield new r.SignJWT({}).setProtectedHeader({typ:"JWT",alg:"ES256"}).setIssuedAt().setExpirationTime("30d").setIssuer("https://mysite.com").setSubject(o).setJti(t).sign(i);return{token:yield new r.CompactEncrypt(new TextEncoder().encode(e)).setProtectedHeader({alg:"ECDH-ES+A128KW",enc:"A256CBC-HS512"}).encrypt(s),dbToken:t}}),T=o=>l(void 0,null,function*(){try{const{plaintext:t}=yield r.compactDecrypt(o,s),e=new TextDecoder().decode(t),{payload:d}=yield r.jwtVerify(e,i,{issuer:"https://mysite.com"});return d}catch{throw new Error("Token decode error")}});return c.decyptToken=T,c.generateToken=w,Object.defineProperties(c,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}}),c}({},jose,uuid);
